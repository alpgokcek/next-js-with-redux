{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport '../styles/app.scss';\nimport { getPosts, setPosts } from '../store/actions/posts';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { API_URL } from '../constants';\nimport fetch from 'isomorphic-fetch';\nimport { Link, Router } from '../routes';\n\nclass Homepage extends React.Component {\n  static async getInitialProps({\n    store\n  }) {\n    await store.dispatch(getPosts()).then(async e => {\n      return {\n        posts: await e\n      };\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"button\", {\n      onClick: () => {\n        Router.pushRoute('/comments');\n      }\n    }, \"All Comments\"), this.props.posts.posts || this.props.posts.posts.length > 0 ? this.props.posts.posts.map(post => {\n      return __jsx(\"div\", {\n        style: {\n          marginBottom: '2.5rem'\n        },\n        key: post.id\n      }, __jsx(\"p\", {\n        style: {\n          fontWeight: '700'\n        }\n      }, post.title), __jsx(\"p\", null, post.body), __jsx(\"button\", {\n        onClick: () => {\n          Router.pushRoute('comments', {\n            slug: post.id\n          });\n        }\n      }, \"Comments on this post\"));\n    }) : __jsx(\"p\", null, \"No posts yet!\"));\n  }\n\n}\n\nexport default connect(state => state)(Homepage);\n/*\nconst mapDispatchToProps = dispatch => ({\n  setPosts: bindActionCreators(setPosts, dispatch),\n  getPosts: bindActionCreators(getPosts, dispatch)\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Homepage);\n\n */\n\n/*\nconst postsFetch = await fetch(`${API_URL}/posts`);\n    const posts = await postsFetch.json()\n    store.getState();\n    store.dispatch(setPosts(posts));\n    return {posts}\n */","map":{"version":3,"sources":["/Users/alpgokcek/Desktop/next-js-poc/pages/index.js"],"names":["react","getPosts","setPosts","bindActionCreators","connect","axios","API_URL","fetch","Link","Router","Homepage","React","Component","getInitialProps","store","dispatch","then","e","posts","render","pushRoute","props","length","map","post","marginBottom","id","fontWeight","title","body","slug","state"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,wBAAnC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,WAA7B;;AAGA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AACrC,eAAaC,eAAb,CAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAAyC;AACvC,UAAMA,KAAK,CAACC,QAAN,CAAed,QAAQ,EAAvB,EAA2Be,IAA3B,CAAgC,MAAOC,CAAP,IAAa;AACjD,aAAO;AAACC,QAAAA,KAAK,EAAE,MAAMD;AAAd,OAAP;AACD,KAFK,CAAN;AAGD;;AAEDE,EAAAA,MAAM,GAAI;AACR,WACE,mBACE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBV,QAAAA,MAAM,CAACW,SAAP,CAAiB,WAAjB;AACD;AAFD,sBADF,EAKG,KAAKC,KAAL,CAAWH,KAAX,CAAiBA,KAAjB,IAA0B,KAAKG,KAAL,CAAWH,KAAX,CAAiBA,KAAjB,CAAuBI,MAAvB,GAA8B,CAAxD,GAA4D,KAAKD,KAAL,CAAWH,KAAX,CAAiBA,KAAjB,CAAuBK,GAAvB,CAA4BC,IAAD,IAAU;AAChG,aACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAwC,QAAA,GAAG,EAAED,IAAI,CAACE;AAAlD,SACE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd;AAAV,SAAkCH,IAAI,CAACI,KAAvC,CADF,EAEE,iBAAIJ,IAAI,CAACK,IAAT,CAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBpB,UAAAA,MAAM,CAACW,SAAP,CAAiB,UAAjB,EAA6B;AAACU,YAAAA,IAAI,EAACN,IAAI,CAACE;AAAX,WAA7B;AACD;AAFD,iCAHF,CADF;AAUD,KAX4D,CAA5D,GAWI,iCAhBP,CADF;AAoBD;;AA5BoC;;AA+BvC,eAAetB,OAAO,CAAC2B,KAAK,IAAIA,KAAV,CAAP,CAAwBrB,QAAxB,CAAf;AAEA;;;;;;;;;;;;;AAaA","sourcesContent":["import react from 'react';\nimport '../styles/app.scss';\nimport { getPosts, setPosts } from '../store/actions/posts';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { API_URL } from '../constants';\nimport fetch from 'isomorphic-fetch';\nimport { Link, Router } from '../routes';\n\n\nclass Homepage extends React.Component {\n  static async getInitialProps ({ store }) {\n    await store.dispatch(getPosts()).then(async (e) => {\n      return {posts: await e};\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <button onClick={() => {\n          Router.pushRoute('/comments');\n        }}>All Comments\n        </button>\n        {this.props.posts.posts || this.props.posts.posts.length>0 ? this.props.posts.posts.map((post) => {\n          return (\n            <div style={{ marginBottom: '2.5rem' }} key={post.id}>\n              <p style={{ fontWeight: '700' }}>{post.title}</p>\n              <p>{post.body}</p>\n              <button onClick={() => {\n                Router.pushRoute('comments', {slug:post.id});\n              }}>Comments on this post\n              </button>\n            </div>\n          );\n        }) : <p>No posts yet!</p>}\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state)(Homepage);\n\n/*\nconst mapDispatchToProps = dispatch => ({\n  setPosts: bindActionCreators(setPosts, dispatch),\n  getPosts: bindActionCreators(getPosts, dispatch)\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Homepage);\n\n */\n\n/*\nconst postsFetch = await fetch(`${API_URL}/posts`);\n    const posts = await postsFetch.json()\n    store.getState();\n    store.dispatch(setPosts(posts));\n    return {posts}\n */\n"]},"metadata":{},"sourceType":"module"}