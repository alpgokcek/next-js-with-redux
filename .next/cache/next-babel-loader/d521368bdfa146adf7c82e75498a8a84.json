{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport '../styles/app.scss';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getComments } from '../store/actions/comments';\nimport { Router } from '../routes';\nimport { getPosts } from '../store/actions/posts';\n\nclass Comments extends React.Component {\n  static async getInitialProps({\n    store,\n    query\n  }) {\n    await store.dispatch(getComments(query.slug ? Number(query.slug) : undefined)).then(async comments => {\n      return {\n        comments: await comments\n      };\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"button\", {\n      onClick: () => {\n        Router.pushRoute('/');\n      }\n    }, \"Posts\"), this.props.comments.comments ? this.props.comments.comments.map(comment => {\n      return __jsx(\"div\", {\n        style: {\n          marginBottom: '2.5rem'\n        },\n        key: comment.id\n      }, __jsx(\"p\", {\n        style: {\n          fontWeight: '700'\n        }\n      }, comment.name, \" - \", comment.email), __jsx(\"p\", null, comment.body));\n    }) : null);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getComments: bindActionCreators(getComments, dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","map":{"version":3,"sources":["/Users/alpgokcek/Desktop/next-js-poc/pages/comments.js"],"names":["react","connect","bindActionCreators","getComments","Router","getPosts","Comments","React","Component","getInitialProps","store","query","dispatch","slug","Number","undefined","then","comments","render","pushRoute","props","map","comment","marginBottom","id","fontWeight","name","email","body","mapStateToProps","state","mapDispatchToProps"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;AAGA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AACrC,eAAaC,eAAb,CAA8B;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAA9B,EAAgD;AAC9C,UAAMD,KAAK,CAACE,QAAN,CAAeT,WAAW,CAACQ,KAAK,CAACE,IAAN,GAAYC,MAAM,CAACH,KAAK,CAACE,IAAP,CAAlB,GAA+BE,SAAhC,CAA1B,EAAsEC,IAAtE,CAA2E,MAAOC,QAAP,IAAoB;AACnG,aAAO;AAACA,QAAAA,QAAQ,EAAE,MAAMA;AAAjB,OAAP;AACD,KAFK,CAAN;AAGD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE,mBACE;AAAQ,MAAA,OAAO,EAAE,MAAI;AAACd,QAAAA,MAAM,CAACe,SAAP,CAAiB,GAAjB;AAAsB;AAA5C,eADF,EAEG,KAAKC,KAAL,CAAWH,QAAX,CAAoBA,QAApB,GAA+B,KAAKG,KAAL,CAAWH,QAAX,CAAoBA,QAApB,CAA6BI,GAA7B,CAAkCC,OAAD,IAAa;AAC5E,aACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB,SAAZ;AAAwC,QAAA,GAAG,EAAED,OAAO,CAACE;AAArD,SACE;AAAG,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd;AAAV,SAAkCH,OAAO,CAACI,IAA1C,SAAmDJ,OAAO,CAACK,KAA3D,CADF,EAEE,iBAAIL,OAAO,CAACM,IAAZ,CAFF,CADF;AAMD,KAP+B,CAA/B,GAOI,IATP,CADF;AAaD;;AArBoC;;AAuBvC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,QAAQ,EAAEa,KAAK,CAACb;AADgB,CAAL,CAA7B;;AAIA,MAAMc,kBAAkB,GAAGnB,QAAQ,KAAK;AACtCT,EAAAA,WAAW,EAAED,kBAAkB,CAACC,WAAD,EAAcS,QAAd;AADO,CAAL,CAAnC;;AAIA,eAAeX,OAAO,CACpB4B,eADoB,EAEpBE,kBAFoB,CAAP,CAGbzB,QAHa,CAAf","sourcesContent":["import react from 'react';\nimport '../styles/app.scss';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getComments} from '../store/actions/comments';\nimport { Router } from '../routes';\nimport { getPosts } from '../store/actions/posts';\n\n\nclass Comments extends React.Component {\n  static async getInitialProps ({ store, query }) {\n    await store.dispatch(getComments(query.slug? Number(query.slug):undefined)).then(async (comments) => {\n      return {comments: await comments};\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <button onClick={()=>{Router.pushRoute('/')}}>Posts</button>\n        {this.props.comments.comments ? this.props.comments.comments.map((comment) => {\n          return (\n            <div style={{ marginBottom: '2.5rem' }} key={comment.id}>\n              <p style={{ fontWeight: '700' }}>{comment.name} - {comment.email}</p>\n              <p>{comment.body}</p>\n            </div>\n          );\n        }) : null}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getComments: bindActionCreators(getComments, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comments);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}