{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport '../styles/app.scss';\nimport { getPosts } from '../store/actions/posts';\nimport { connect } from 'react-redux';\nimport { Router } from '../routes';\n\nclass Homepage extends React.Component {\n  static async getInitialProps({\n    store\n  }) {\n    if (store.getState().posts.posts) {\n      console.log(\"in if statement\");\n      return {\n        posts: await store.getState().posts.posts\n      };\n    }\n\n    await store.dispatch(getPosts()).then(async e => {\n      return {\n        posts: await e\n      };\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"h1\", null, \"Posts\"), __jsx(\"button\", {\n      onClick: () => {\n        Router.pushRoute('/comments');\n      }\n    }, \"All Comments\"), this.props.posts.posts || this.props.posts.posts.length > 0 ? this.props.posts.posts.map(post => {\n      return __jsx(\"div\", {\n        className: \"content\",\n        key: post.id\n      }, __jsx(\"p\", {\n        className: \"content__title\"\n      }, post.title), __jsx(\"p\", null, post.body), __jsx(\"button\", {\n        onClick: () => {\n          Router.pushRoute('comments', {\n            slug: post.id\n          });\n        }\n      }, \"Comments on this post\"));\n    }) : __jsx(\"p\", null, \"No posts yet!\"));\n  }\n\n}\n\nexport default connect(state => state)(Homepage);\n/*\nconst mapDispatchToProps = dispatch => ({\n  setPosts: bindActionCreators(setPosts, dispatch),\n  getPosts: bindActionCreators(getPosts, dispatch)\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Homepage);\n\n */\n\n/*\nconst postsFetch = await fetch(`${API_URL}/posts`);\n    const posts = await postsFetch.json()\n    store.getState();\n    store.dispatch(setPosts(posts));\n    return {posts}\n */","map":{"version":3,"sources":["/Users/alpgokcek/Desktop/next-js-poc/pages/index.js"],"names":["getPosts","connect","Router","Homepage","React","Component","getInitialProps","store","getState","posts","console","log","dispatch","then","e","render","pushRoute","props","length","map","post","id","title","body","slug","state"],"mappings":";;AAAA,OAAO,oBAAP;AACA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAGA,MAAMC,QAAN,SAAuBC,KAAK,CAACC,SAA7B,CAAuC;AACrC,eAAaC,eAAb,CAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAAyC;AACvC,QAAIA,KAAK,CAACC,QAAN,GAAiBC,KAAjB,CAAuBA,KAA3B,EAAiC;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,aAAO;AAACF,QAAAA,KAAK,EAAE,MAAMF,KAAK,CAACC,QAAN,GAAiBC,KAAjB,CAAuBA;AAArC,OAAP;AACD;;AACD,UAAMF,KAAK,CAACK,QAAN,CAAeZ,QAAQ,EAAvB,EAA2Ba,IAA3B,CAAgC,MAAOC,CAAP,IAAa;AACjD,aAAO;AAACL,QAAAA,KAAK,EAAE,MAAMK;AAAd,OAAP;AACD,KAFK,CAAN;AAGD;;AAEDC,EAAAA,MAAM,GAAI;AACR,WACE,mBACE,0BADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAM;AACrBb,QAAAA,MAAM,CAACc,SAAP,CAAiB,WAAjB;AACD;AAFD,sBAFF,EAMG,KAAKC,KAAL,CAAWR,KAAX,CAAiBA,KAAjB,IAA0B,KAAKQ,KAAL,CAAWR,KAAX,CAAiBA,KAAjB,CAAuBS,MAAvB,GAA8B,CAAxD,GAA4D,KAAKD,KAAL,CAAWR,KAAX,CAAiBA,KAAjB,CAAuBU,GAAvB,CAA4BC,IAAD,IAAU;AAChG,aACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,GAAG,EAAEA,IAAI,CAACC;AAAnC,SACE;AAAG,QAAA,SAAS,EAAC;AAAb,SAAgCD,IAAI,CAACE,KAArC,CADF,EAEE,iBAAIF,IAAI,CAACG,IAAT,CAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,MAAM;AACrBrB,UAAAA,MAAM,CAACc,SAAP,CAAiB,UAAjB,EAA6B;AAACQ,YAAAA,IAAI,EAACJ,IAAI,CAACC;AAAX,WAA7B;AACD;AAFD,iCAHF,CADF;AAUD,KAX4D,CAA5D,GAWI,iCAjBP,CADF;AAqBD;;AAjCoC;;AAoCvC,eAAepB,OAAO,CAACwB,KAAK,IAAIA,KAAV,CAAP,CAAwBtB,QAAxB,CAAf;AAEA;;;;;;;;;;;;;AAaA","sourcesContent":["import '../styles/app.scss';\nimport { getPosts } from '../store/actions/posts';\nimport { connect } from 'react-redux';\nimport { Router } from '../routes';\n\n\nclass Homepage extends React.Component {\n  static async getInitialProps ({ store }) {\n    if (store.getState().posts.posts){\n      console.log(\"in if statement\");\n      return {posts: await store.getState().posts.posts}\n    }\n    await store.dispatch(getPosts()).then(async (e) => {\n      return {posts: await e};\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <h1>Posts</h1>\n        <button onClick={() => {\n          Router.pushRoute('/comments');\n        }}>All Comments\n        </button>\n        {this.props.posts.posts || this.props.posts.posts.length>0 ? this.props.posts.posts.map((post) => {\n          return (\n            <div className=\"content\" key={post.id}>\n              <p className=\"content__title\" >{post.title}</p>\n              <p>{post.body}</p>\n              <button onClick={() => {\n                Router.pushRoute('comments', {slug:post.id});\n              }}>Comments on this post\n              </button>\n            </div>\n          );\n        }) : <p>No posts yet!</p>}\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state)(Homepage);\n\n/*\nconst mapDispatchToProps = dispatch => ({\n  setPosts: bindActionCreators(setPosts, dispatch),\n  getPosts: bindActionCreators(getPosts, dispatch)\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Homepage);\n\n */\n\n/*\nconst postsFetch = await fetch(`${API_URL}/posts`);\n    const posts = await postsFetch.json()\n    store.getState();\n    store.dispatch(setPosts(posts));\n    return {posts}\n */\n"]},"metadata":{},"sourceType":"module"}