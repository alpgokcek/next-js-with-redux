{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_COMMENTS } from '../../../constants';\nexport default ((state = {\n  comments: []\n}, action) => {\n  switch (action.type) {\n    case GET_COMMENTS:\n      return _objectSpread({}, state, {\n        comments: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/alpgokcek/Desktop/next-js-poc/store/reducers/comments/index.js"],"names":["GET_COMMENTS","state","comments","action","type","payload"],"mappings":";;;;;;;;;;;;AAAA,SAASA,YAAT,QAA6B,oBAA7B;AAEA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAT,EAA2BC,MAA3B,KAAsC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,YAAL;AACE,+BAAYC,KAAZ;AAAmBC,QAAAA,QAAQ,EAAEC,MAAM,CAACE;AAApC;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD","sourcesContent":["import { GET_COMMENTS } from '../../../constants';\n\nexport default (state = { comments: [] }, action) => {\n  switch (action.type) {\n    case GET_COMMENTS:\n      return { ...state, comments: action.payload };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}