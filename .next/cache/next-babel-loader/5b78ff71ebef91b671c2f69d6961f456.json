{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport axios from 'axios';\nimport { API_URL, GET_POSTS, SET_POSTS } from '../../../constants';\nimport fetch from 'isomorphic-fetch';\nexport var getPosts = function getPosts() {\n  return function _callee2(dispatch) {\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = GET_POSTS;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(_Promise.resolve(axios.get(\"\".concat(API_URL, \"/posts\")).then(function _callee(res) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      return _context.abrupt(\"return\", res.data);\n\n                    case 1:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              });\n            })).catch(function (e) {\n              console.log('ERROR:GET_POSTS ', e);\n            }));\n\n          case 3:\n            _context2.t1 = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              type: _context2.t0,\n              payload: _context2.t1\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport var setPosts = function setPosts(posts) {\n  return function (dispatch) {\n    console.log(\"inside set posts\");\n    dispatch({\n      type: SET_POSTS,\n      payload: posts\n    });\n  };\n};","map":{"version":3,"sources":["/Users/alpgokcek/Desktop/next-js-poc/store/actions/posts/index.js"],"names":["axios","API_URL","GET_POSTS","SET_POSTS","fetch","getPosts","dispatch","resolve","get","then","res","data","catch","e","console","log","type","payload","setPosts","posts"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA8C,oBAA9C;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAIA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAK,kBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BACrBJ,SADqB;AAAA;AAAA,6CAEZ,SAAQK,OAAR,CACbP,KAAK,CAACQ,GAAN,WAAaP,OAAb,aACGQ,IADH,CACQ,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,uDACGA,GAAG,CAACC,IADP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR,CADa,EAKZC,KALY,CAKN,UAAAC,CAAC,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,CAAhC;AACD,aAPY,CAFY;;AAAA;AAAA;AAAA;AAC3BG,cAAAA,IAD2B;AAE3BC,cAAAA,OAF2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAL;AAAA,CAAjB;AAcP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD;AAAA,SAAW,UAAAb,QAAQ,EAAI;AAC7CQ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAT,IAAAA,QAAQ,CAAC;AACPU,MAAAA,IAAI,EAAEb,SADC;AAEPc,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GANuB;AAAA,CAAjB","sourcesContent":["import axios from 'axios';\nimport { API_URL, GET_POSTS, SET_POSTS } from '../../../constants'\nimport fetch from 'isomorphic-fetch'\n\n\n\nexport const getPosts = ()=> async dispatch => ({\n  type: GET_POSTS,\n  payload: await Promise.resolve(\n    axios.get(`${API_URL}/posts`)\n      .then(async res => {\n        return res.data;\n      }))\n    .catch(e => {\n      console.log('ERROR:GET_POSTS ', e);\n    })\n});\n\n\n\nexport const setPosts = (posts) => dispatch => {\n  console.log(\"inside set posts\");\n  dispatch({\n    type: SET_POSTS,\n    payload: posts\n  })\n}\n\n"]},"metadata":{},"sourceType":"module"}