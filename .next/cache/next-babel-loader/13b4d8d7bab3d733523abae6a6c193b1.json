{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport react from 'react';\nimport '../styles/app.scss';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getComments } from '../store/actions/comments';\nimport { Router } from '../routes';\nimport { getPosts } from '../store/actions/posts';\n\nvar Comments =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Comments, _React$Component);\n\n  function Comments() {\n    _classCallCheck(this, Comments);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Comments).apply(this, arguments));\n  }\n\n  _createClass(Comments, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"button\", {\n        onClick: function onClick() {\n          Router.pushRoute('/');\n        }\n      }, \"Posts\"), this.props.comments.comments ? this.props.comments.comments.map(function (comment) {\n        return __jsx(\"div\", {\n          style: {\n            marginBottom: '2.5rem'\n          },\n          key: comment.id\n        }, __jsx(\"p\", {\n          style: {\n            fontWeight: '700'\n          }\n        }, comment.name, \" - \", comment.email), __jsx(\"p\", null, comment.body));\n      }) : null);\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store, query;\n      return _regeneratorRuntime.async(function getInitialProps$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              store = _ref.store, query = _ref.query;\n              console.log(query);\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(store.dispatch(getComments(query.slug)).then(function _callee(comments) {\n                return _regeneratorRuntime.async(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _regeneratorRuntime.awrap(comments);\n\n                      case 2:\n                        _context.t0 = _context.sent;\n                        return _context.abrupt(\"return\", {\n                          comments: _context.t0\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                });\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return Comments;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    comments: state.comments,\n    postId: state.postId\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getComments: bindActionCreators(getComments, dispatch)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);","map":{"version":3,"sources":["/Users/alpgokcek/Desktop/next-js-poc/pages/comments.js"],"names":["react","connect","bindActionCreators","getComments","Router","getPosts","Comments","console","log","props","pushRoute","comments","map","comment","marginBottom","id","fontWeight","name","email","body","store","query","dispatch","slug","then","React","Component","mapStateToProps","state","postId","mapDispatchToProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,kBAAR,QAAiC,OAAjC;AACA,SAAQC,WAAR,QAA0B,2BAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;;IAGMC,Q;;;;;;;;;;;;;wCAOiB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;;6BAES;AACR,aACE,mBACE;AAAQ,QAAA,OAAO,EAAE,mBAAI;AAACL,UAAAA,MAAM,CAACM,SAAP,CAAiB,GAAjB;AAAsB;AAA5C,iBADF,EAEG,KAAKD,KAAL,CAAWE,QAAX,CAAoBA,QAApB,GAA+B,KAAKF,KAAL,CAAWE,QAAX,CAAoBA,QAApB,CAA6BC,GAA7B,CAAiC,UAACC,OAAD,EAAa;AAC5E,eACE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,YAAY,EAAE;AAAhB,WAAZ;AAAwC,UAAA,GAAG,EAAED,OAAO,CAACE;AAArD,WACE;AAAG,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE;AAAd;AAAV,WAAkCH,OAAO,CAACI,IAA1C,SAAmDJ,OAAO,CAACK,KAA3D,CADF,EAEE,iBAAIL,OAAO,CAACM,IAAZ,CAFF,CADF;AAMD,OAP+B,CAA/B,GAOI,IATP,CADF;AAaD;;;;;;;;;AAxB+BC,cAAAA,K,QAAAA,K,EAAOC,K,QAAAA,K;AACrCd,cAAAA,OAAO,CAACC,GAAR,CAAYa,KAAZ;;+CACMD,KAAK,CAACE,QAAN,CAAenB,WAAW,CAACkB,KAAK,CAACE,IAAP,CAA1B,EAAwCC,IAAxC,CAA6C,iBAAOb,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACzBA,QADyB;;AAAA;AAAA;AAAA;AACzCA,0BAAAA,QADyC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA7C,C;;;;;;;;;;;;EAHac,KAAK,CAACC,S;;AA2B7B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACjB,QADgB;AAEhCkB,IAAAA,MAAM,EAAED,KAAK,CAACC;AAFkB,GAAL;AAAA,CAA7B;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAR,QAAQ;AAAA,SAAK;AACtCnB,IAAAA,WAAW,EAAED,kBAAkB,CAACC,WAAD,EAAcmB,QAAd;AADO,GAAL;AAAA,CAAnC;;AAIA,eAAerB,OAAO,CACpB0B,eADoB,EAEpBG,kBAFoB,CAAP,CAGbxB,QAHa,CAAf","sourcesContent":["import react from 'react';\nimport '../styles/app.scss';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getComments} from '../store/actions/comments';\nimport { Router } from '../routes';\nimport { getPosts } from '../store/actions/posts';\n\n\nclass Comments extends React.Component {\n  static async getInitialProps ({ store, query }) {\n    console.log(query);\n    await store.dispatch(getComments(query.slug)).then(async (comments) => {\n      return {comments: await comments};\n    });\n  }\n  componentDidMount () {\n    console.log(this.props)\n  }\n\n  render () {\n    return (\n      <div>\n        <button onClick={()=>{Router.pushRoute('/')}}>Posts</button>\n        {this.props.comments.comments ? this.props.comments.comments.map((comment) => {\n          return (\n            <div style={{ marginBottom: '2.5rem' }} key={comment.id}>\n              <p style={{ fontWeight: '700' }}>{comment.name} - {comment.email}</p>\n              <p>{comment.body}</p>\n            </div>\n          );\n        }) : null}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  comments: state.comments,\n  postId: state.postId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getComments: bindActionCreators(getComments, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comments);\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}