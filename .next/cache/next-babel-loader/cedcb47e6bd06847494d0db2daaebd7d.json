{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from 'axios';\nimport { API_URL, GET_POSTS } from '../../constants';\nexport var getPosts = function getPosts() {\n  return function _callee(dispatch) {\n    var posts;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            posts = axios.get(\"\".concat(API_URL, \"/posts\")).then(function (response) {\n              console.log(response);\n              return response.data;\n            }).catch(function (e) {\n              console.error(e);\n              return {\n                error: e\n              };\n            });\n            dispatch({\n              type: GET_POSTS,\n              payload: posts\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/alpgokcek/Desktop/next-js-poc/actions/posts/index.js"],"names":["axios","API_URL","GET_POSTS","getPosts","dispatch","posts","get","then","response","console","log","data","catch","e","error","type","payload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,EAAiBC,SAAjB,QAAiC,iBAAjC;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACtBC,YAAAA,KADsB,GACdL,KAAK,CAACM,GAAN,WAAeL,OAAf,aAAgCM,IAAhC,CAAqC,UAAAC,QAAQ,EAAI;AAC7DC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,qBAAOA,QAAQ,CAACG,IAAhB;AACD,aAHa,EAGXC,KAHW,CAGL,UAAAC,CAAC,EAAE;AACVJ,cAAAA,OAAO,CAACK,KAAR,CAAcD,CAAd;AACA,qBAAO;AAACC,gBAAAA,KAAK,EAAED;AAAR,eAAP;AACD,aANa,CADc;AAS5BT,YAAAA,QAAQ,CAAC;AACPW,cAAAA,IAAI,EAAEb,SADC;AAEPc,cAAAA,OAAO,EAAEX;AAFF,aAAD,CAAR;;AAT4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;AAAA,CAAjB","sourcesContent":["import axios from 'axios'\nimport {API_URL, GET_POSTS} from '../../constants';\n\nexport const getPosts = () => async dispatch => {\n  const posts = axios.get(  `${API_URL}/posts`).then(response => {\n    console.log(response);\n    return response.data\n  }).catch(e=>{\n    console.error(e);\n    return {error: e}\n  });\n\n  dispatch({\n    type: GET_POSTS,\n    payload: posts\n  });\n};\n"]},"metadata":{},"sourceType":"module"}