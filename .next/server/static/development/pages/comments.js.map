{"version":3,"file":"static/development/pages/comments.js","sources":["webpack:///webpack/bootstrap","webpack:///./constants/index.js","webpack:///./pages/comments.js","webpack:///./routes.js","webpack:///./store/actions/comments/index.js","webpack:///./store/actions/posts/index.js","webpack:///external \"axios\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"next-routes\"","webpack:///external \"react\"","webpack:///external \"react-redux\"","webpack:///external \"redux\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export const API_URL = 'https://jsonplaceholder.typicode.com'\n\nexport const GET_POSTS = 'GET_POSTS';\nexport const SET_POSTS = 'SET_POSTS';\nexport const GET_COMMENTS = 'GET_COMMENTS';\n","import react from 'react';\nimport '../styles/app.scss';\nimport {connect} from 'react-redux';\nimport {bindActionCreators} from 'redux';\nimport {getComments} from '../store/actions/comments';\nimport { Router } from '../routes';\nimport { getPosts } from '../store/actions/posts';\n\n\nclass Comments extends React.Component {\n  static async getInitialProps ({ store, query }) {\n    await store.dispatch(getComments(query.slug? Number(query.slug):undefined)).then(async (comments) => {\n      return {comments: await comments};\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <h1>Comments</h1>\n        <button onClick={()=>{Router.pushRoute('/')}}>Posts</button>\n        {this.props.comments.comments ? this.props.comments.comments.map((comment) => {\n          return (\n            <div className=\"content\" key={comment.id}>\n              <p className=\"content__title\">{comment.name} - {comment.email}</p>\n              <p>{comment.body}</p>\n            </div>\n          );\n        }) : null}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  comments: state.comments\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getComments: bindActionCreators(getComments, dispatch),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Comments);\n\n\n\n\n","const routes = require('next-routes')\n\nmodule.exports = routes()\n    .add('index', '/')\n    .add({name: 'comments', pattern:'/comments/:slug', page: 'comments'})\n","import axios from 'axios';\nimport fetch from 'isomorphic-fetch'\nimport { API_URL, GET_COMMENTS } from '../../../constants';\n\n\nexport const getComments = (postId) => async dispatch => {\n  const commentsFetch = await fetch(`${API_URL}/comments`)\n  const allComments = await commentsFetch.json();\n  const comments = allComments.filter(comment => comment.postId===postId)\n  dispatch({\n    type: GET_COMMENTS,\n    payload: postId ? comments : allComments\n  })\n  return comments;\n}\n","import axios from 'axios';\nimport { API_URL, GET_COMMENTS, GET_POSTS, SET_POSTS } from '../../../constants';\nimport fetch from 'isomorphic-fetch'\n\n\nexport const getPosts = () => async dispatch => {\n  const postsFetch = await fetch(`${API_URL}/posts`)\n  const posts = await postsFetch.json();\n  dispatch({\n    type: GET_POSTS,\n    payload: posts\n  })\n  return posts;\n}\n","module.exports = require(\"axios\");","module.exports = require(\"isomorphic-fetch\");","module.exports = require(\"next-routes\");","module.exports = require(\"react\");","module.exports = require(\"react-redux\");","module.exports = require(\"redux\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAGA;AACA;AAvBA;AACA;AAuBA;AACA;AADA;AACA;AAGA;AACA;AADA;AACA;AAGA;;;;;;;;;;;ACzCA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;ACdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}