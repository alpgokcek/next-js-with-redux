{"version":3,"file":"static/webpack/static/development/pages/index.js.df6efa6e7081de3fc140.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import '../styles/app.scss';\nimport { getPosts } from '../store/actions/posts';\nimport { connect } from 'react-redux';\nimport { Router } from '../routes';\n\n\nclass Homepage extends React.Component {\n  static async getInitialProps ({ store }) {\n    await store.dispatch(getPosts()).then(async (e) => {\n      return {posts: await e};\n    });\n  }\n\n  render () {\n    return (\n      <div>\n        <h1>Posts</h1>\n        <button onClick={() => {\n          Router.pushRoute('/comments');\n        }}>All Comments\n        </button>\n        {this.props.posts.posts || this.props.posts.posts.length>0 ? this.props.posts.posts.map((post) => {\n          return (\n            <div className=\"content\" key={post.id}>\n              <p className=\"content__title\" >{post.title}</p>\n              <p>{post.body}</p>\n              <button onClick={() => {\n                Router.pushRoute('comments', {slug:post.id});\n              }}>Comments on this post\n              </button>\n            </div>\n          );\n        }) : <p>No posts yet!</p>}\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state)(Homepage);\n\n/*\nconst mapDispatchToProps = dispatch => ({\n  setPosts: bindActionCreators(setPosts, dispatch),\n  getPosts: bindActionCreators(getPosts, dispatch)\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Homepage);\n\n */\n\n/*\nconst postsFetch = await fetch(`${API_URL}/posts`);\n    const posts = await postsFetch.json()\n    store.getState();\n    store.dispatch(setPosts(posts));\n    return {posts}\n */\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;AAOA;AACA;AAGA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAFA;AAMA;AAGA;;;;;;;;;AA5BA;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAHA;AACA;AA+BA;AAAA;AAAA;AAEA;;;;;;;;;;;;;AAaA;;;;;;;;;;A","sourceRoot":""}